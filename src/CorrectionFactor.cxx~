#include "UHH2/MTopJet/include/CorrectionFactor.h"

double Correction::get_factor(double pt, double eta){

  Float_t pt_bins[] = {0, 80, 130, 180, 250, 350, 500};
  Float_t eta_bins[] = {-4, -1.5, -1.0, -0.7, -0.4, -0.2, 0.0, 0.2, 0.4, 0.7, 1.0, 1.5, 4};

  // get factors in pt and eta bins from file
  std::ifstream file("CorrectionFactors.txt");
  int p, e;
  double f;
  double arr[6][12];
  while (file >> p >> e >> f) {
    cout << p << e << f << endl;
    arr[p][e] = f;
  }

  // get pt bin
  int ptbin = 0;
  for(unsigned int i = 0; i < 6; i++){
    if(pt > pt_bins[i]) ptbin = i;
  }

  // get eta bin
  int etabin = 0;
  for(unsigned int i = 0; i < 6; i++){
    if(eta > eta_bins[i]) etabin = i;
  }

  // get factor from array
  double factor = arr[ptbin][etabin];

  return factor;
}

Particle Correction::GetLepton(uhh2::Event & event){

  Particle lepton;
  bool muonislep = false;
  bool elecislep = false;

  if(event.muons->size() > 0 && event.electrons->size() > 0){
    if(event.muons->at(0).pt() > event.electrons->at(0).pt()) muonislep = true;
    else elecislep = true;
  }
  else if(event.muons->size() > 0) muonislep = true;
  else if(event.electrons->size() > 0) elecislep = true;

  if(muonislep) lepton = event.muons->at(0);
  if(elecislep) lepton = event.electrons->at(0);

  return lepton;
}


CorrectionFactor::CorrectionFactor(uhh2::Context & ctx, const std::string & name):
  h_oldjets(ctx.get_handle<std::vector<TopJet>>("xconeCHS")),
  h_newjets(ctx.declare_event_output<std::vector<TopJet>>(name)) {}

bool CorrectionFactor::process(uhh2::Event & event){
  std::vector<TopJet> oldjets = event.get(h_oldjets);
  std::vector<TopJet> newjets;
  for(unsigned int i=0; i < oldjets.size(); i++) newjets.push_back(oldjets.at(i));
  std::auto_ptr<Correction> corr(new Correction);

  // get had jet, to only correct had subjets
  Particle lepton = corr->GetLepton(event);
  int had_nr = 0;
  int lep_nr = 1;
  if(deltaR(lepton, oldjets.at(0)) < deltaR(lepton, oldjets.at(1))){
    had_nr = 1;
    lep_nr = 0;
  }

  // leave lep subjets unchanged
  newjets.at(lep_nr).set_subjets(oldjets.at(lep_nr).subjets());

  // now correct had subjets
  std::vector<Jet> oldsubjets = oldjets.at(had_nr).subjets();
  std::vector<Jet> newsubjets;
  LorentzVector newjet_v4;
  Jet newjet;
  float factor;
  for(unsigned int i=0; i < oldsubjets.size(); i++){
    factor = corr->get_factor(oldsubjets.at(i).pt(), oldsubjets.at(i).eta());
    newjet_v4 = oldsubjets.at(i).v4() * factor;
    newjet.set_v4(newjet_v4);
    newsubjets.push_back(newjet);
    cout<< "-----------------------" << endl; 
    cout<< "old pt = " << oldsubjets.at(i).pt() << endl;
    cout<< "factor = " << factor << endl;
    cout<< "new pt = " << newjet.pt() << endl;
  }

  newjets.at(had_nr).set_subjets(newsubjets);
  event.set(h_newjets, newjets);

  return true;
}
